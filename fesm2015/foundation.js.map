{"version":3,"file":"foundation.js","sources":["ng://@datagazer/foundation/lib/classes/style-builder.ts","ng://@datagazer/foundation/lib/directives/elevation.directive.ts","ng://@datagazer/foundation/lib/directives/typography.directive.ts","ng://@datagazer/foundation/lib/services/type.service.ts","ng://@datagazer/foundation/lib/foundation.module.ts","ng://@datagazer/foundation/public-api.ts","ng://@datagazer/foundation/foundation.ts"],"sourcesContent":["import { ElementRef, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Renderer2, RendererStyleFlags2 } from '@angular/core';\nimport { StyleDeclaration } from '../interfaces/style-declaration';\nimport { TypeService } from '../services/type.service';\n\nexport abstract class StyleBuilder {\n  public set input(value: any) {\n    let input = this._type.toString(value);\n\n    {\n      let changes = this._differ.diff(input ? this.build(input) : {});\n\n      if (changes) {\n        this._applyChanges(changes);\n      }\n    }\n  }\n\n  private _differ: KeyValueDiffer<string, string | null> = this._keyValueDiffers.find({}).create();\n\n  public constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _keyValueDiffers: KeyValueDiffers,\n    private _renderer: Renderer2,\n\n    private _type: TypeService\n  ) {}\n\n  protected abstract build(input: string): StyleDeclaration;\n\n  private _applyChanges(changes: KeyValueChanges<string, string | null>): void {\n    changes.forEachItem(({ key: style, currentValue: value }) => {\n      this._renderer.setStyle(this._elementRef.nativeElement, style, value, RendererStyleFlags2.DashCase);\n    });\n  }\n}\n","import { Directive } from '@angular/core';\nimport { StyleBuilder } from '../classes/style-builder';\nimport { StyleDeclaration } from '../interfaces/style-declaration';\n\n@Directive({\n  selector: '[dgElevation]',\n\n  inputs: [\n    'input: dgElevation'\n  ]\n})\nexport class ElevationDirective extends StyleBuilder {\n  public build(input: string): StyleDeclaration {\n    return {\n      'box-shadow': `var(--elevation-z${input}--box-shadow)`\n    };\n  }\n}\n","import { Directive } from '@angular/core';\nimport { StyleBuilder } from '../classes/style-builder';\nimport { StyleDeclaration } from '../interfaces/style-declaration';\n\n@Directive({\n  selector: '[dgTypography]',\n\n  inputs: [\n    'input: dgTypography'\n  ]\n})\nexport class TypographyDirective extends StyleBuilder {\n  public build(input: string): StyleDeclaration {\n    return {\n      'font-size': `var(--typography-${input}--font-size)`,\n      'line-height': `var(--typography-${input}--line-height)`,\n      'font-weight': `var(--typography-${input}--font-weight)`,\n      'font-family': `var(--typography-${input}--font-family)`,\n      'letter-spacing': `var(--typography-${input}--letter-spacing)`\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TypeService {\n  public isVoid(value: any): value is void {\n    return value === undefined || value === null;\n  }\n\n  public toString(value: any): string | null {\n    if (!this.isVoid(value)) {\n      return String(value);\n    }\n\n    return null;\n  }\n\n  public toNumber(value: any): number | null {\n    if (!this.isVoid(value)) {\n      return Number(value);\n    }\n\n    return null;\n  }\n\n  public toBoolean(value: any): boolean | null {\n    if (!this.isVoid(value)) {\n      if (typeof value === 'string') {\n        return value !== 'false';\n      }\n\n      return Boolean(value);\n    }\n\n    return null;\n  }\n\n  public toDate(value: any): Date | null {\n    if (!this.isVoid(value)) {\n      let date = new Date(value);\n\n      return new Date(\n        Date.UTC(\n          date.getFullYear(),\n          date.getMonth(),\n          date.getDate(),\n          date.getHours(),\n          date.getMinutes(),\n          date.getSeconds(),\n          date.getMilliseconds()\n        )\n      );\n    }\n\n    return null;\n  }\n}\n","import { NgModule, Type } from '@angular/core';\n\n// Directives\nimport { ElevationDirective } from './directives/elevation.directive';\nimport { TypographyDirective } from './directives/typography.directive';\n\nconst directives: Type<object>[] = [\n  ElevationDirective,\n  TypographyDirective\n];\n\n@NgModule({\n  imports: [\n\n  ],\n\n  exports: [\n    ...directives\n  ],\n\n  declarations: [\n    ...directives\n  ]\n})\nexport class FoundationModule {}\n","// Classes\nexport * from './lib/classes/style-builder';\n\n// Directives\nexport * from './lib/directives/elevation.directive';\nexport * from './lib/directives/typography.directive';\n\n// Interfaces\nexport * from './lib/interfaces/style-declaration';\n\n// Services\nexport * from './lib/services/type.service';\n\n// Module\nexport * from './lib/foundation.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}